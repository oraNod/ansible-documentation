name: Ansible package docs build
on:
  workflow_dispatch:
    inputs:
      github_fork:
        description: 'GitHub Fork'
        required: true
        default: 'ansible'
      github_branch:
        description: 'GitHub Branch'
        required: true
        default: 'devel'
      requirements:
        type: choice
        description: 'Installs tested or relaxed requirements'
        required: true
        default: '-r tests/requirements.in -c tests/requirements.txt'
        options:
        - '-r tests/requirements.in -c tests/requirements.txt'
        - '-r tests/requirements-relaxed.in -c tests/requirements-relaxed.txt'
      language:
        type: choice
        description: 'Language'
        required: true
        default: 'english'
        options:
        - 'english'
        - 'japanese'
      package_version:
        type: choice
        description: 'Ansible Version'
        required: true
        default: 'devel'
        options:
        - 'devel'
        - '8'
        - '7'
        - '6'
        - '5'
        - '4'
        - '3'
      latest_symlink:
        type: boolean
        description: 'Add latest symlink'
        required: true

jobs:
  build-package-docs:
    runs-on: self-hosted
    env:
      REQUIREMENTS: ${{ github.event.inputs.requirements}}
      LANGUAGE: ${{ github.event.inputs.language}}
      PACKAGE_VERSION: "${{ github.event.inputs.package_version }}"
    steps:
      - name: Checkout Ansible package documentation
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.github_fork }}/ansible-documentation
          ref: ${{ github.event.inputs.github_branch }}

      - name: Install Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          python -m pip install ${REQUIREMENTS}

      - name: Graft ansible-core
        run: |
          python docs/bin/clone-core.py

      - name: Set collection list
        run: |
          if [ ${PACKAGE_VERSION} == "devel" ]; then
            echo COLLECTION_LIST="" >> $GITHUB_ENV
          else
            echo COLLECTION_LIST="${PACKAGE_VERSION}" >> $GITHUB_ENV
          fi

      - name: Set package version
        run: |
          if [ ${LANGUAGE} == "english" ]; then
            echo VERSION="${PACKAGE_VERSION}" >> $GITHUB_ENV
          elif [ ${LANGUAGE} == "japanese" ]; then
            echo VERSION="${PACKAGE_VERSION}_ja" >> $GITHUB_ENV
          fi

      - name: Build the package docs
        run: make webdocs ANSIBLE_VERSION="${COLLECTION_LIST}"
        working-directory: docs/docsite

      - name: Create latest symlink
        if: ${{ github.event.inputs.latest_symlink == 'true' }}
        run: ln -s ${VERSION} _build/latest
        working-directory: docs/docsite
